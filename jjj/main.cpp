#include <iostream> //подключение библиотеки функции ввода-вывода
#include <vector>
using namespace std; //подключение пространства имён std
//1
/*int main(){//точка входа в программу
  double a,b; // создание двух вещественных чисел
  cin>>a>>b; // ввод двух вещественных чисел
  cout<<"Amount: "<<a+b<<"\n"; // Счмиаеися и выводится сумма
  cout<<"Difference: "<<a-b<<"\n"; // Счмиаеися и выводится разность
  cout<<"Quotient: "<<a/b; // Счмиаеися и выводится частное
}*/
//2
/*int main(){ // точка входа в программу
   int a,b,c; // создание трёх целых чисел
   cin>>a>>b>>c; // ввод трёх целых чисел
 
   // Сортировка 3 переменных по возрастанию
   // пузырьковой сортировкой
   if (a>b){ swap(a,b); } // наибольшее число всплывает
   if (b>c){ swap(b,c); } // наибольшее гарантировано - c
   if (a>b){ swap(a,b); } // второе наибольшее значение всплывает b - среднее
 
   cout<<a*b; // произведение наименьшего и среднего
}*/
//3
/*int main(){ //точка входа в программу
 int n; // создание одного целго числа
 cin>>n; // ввод одгого целого числа

 int y=1; // нулевой член последовательности
 for (int i=1; i<=2*n-1; i+=2){ // i - множитель, который превращает член в следующий
     y=y*i; // член последовательности увеличивается на одиг щаш
 }

 cout<<y; // вывод результирующего члена последовательности
}*/
//4
/*int main(){//точка входа в программу
   int n; // создание одного целго числа
   cin>>n; // ввод размера  массива
   vector<int> arr(n); // инициализация массива
    //{1,-5,3}
     //0,1,2
   // arr[0]
   for (int i=0; i<n; i++) // заполнение массива из консоли
       cin>>arr[i];
   int min=INT_MAX, max=INT_MIN; // инициализация переменных
   // для храненеия минимального и максимального значения
   for (auto item: arr){ // итерирование по массиву
       if (item<min) min=item; // если меньше минимального, то элемент становится минимальным
       if (item>max) max=item; // если больше максимального, то элемент становится максимальным
   }
 
   cout<<max-min; // Вывод разности между максимальным и минимальным элементами массива
}*/
//5
/*int main(){//точка входа в программу
 int n, z; // создание двух целых числел
 cin>>n>>z; // ввод размера массива и число кратные которому суммируются
 vector<int> arr(n); // Инициализция массива нужных размеров
 for (int i=0; i<n; i++) // заполнение массива из консоли
     cin>>arr[i];
 int sum=0; // переменная для сумирования элементов кратных z
 for (auto item: arr){ // итерирование по массиву
     if (item % z==0) sum=sum+item; // прибавление при кратности
 }
 cout<<sum; // вывод ответа
}*/

//6
/*void print_matrix(vector<vector<int>> arr){ // вывод массива
 for(auto row: arr){  // Итерирование по двумерному массиву
     for (auto item: row){ // Итерирование по массиву
         cout<<item<<" "; // Вывод элемента
     } cout<<"\n"; // Вывод раздедления после печати каждой строки массива
 }
}
int main(){ //точка входа в программу
 int n, m; // создание двух целых числел
 cin>>n>>m; // ввод размеров массива
    n=3 m=4
    max-200000000000000
       0 1 2 3
    {0{1,2,5,6}, sum=14
     1{2,5,9,8}, sum=24
     2{5,6,7,9}} sum=27
 vector<vector<int>> arr(n, vector<int>(m)); // Инициализция массива нужных размеров
 for (int i=0; i<n; i++)
     for (int j=0; j<m; j++)
         cin>>arr[i][j]; // заполнение массива из консоли
 int max_index=0, max=INT_MIN; // создание переменной для хранения индекса строки с максимальной суммой
 // и переменную которая будет сравниваться с суммами элементов строк
 for (int i=0; i<n; i++){ // Счётчик для прохода по массиву
     int sum=0; // Переменная для суммирования элементов строки
     for (auto item: arr[i]){ // Итерировние по строке
         sum=sum+item;  // Сложение элемента массива с суммой предыдущих
     }
     if (sum>max){ // Проверка на то, что максимальная сумма до сих пор максимальная
         max=sum; // Если это не так, то появлется новая максимальная сумма
         max_index=i; // И индекс строки с максимальной суммой меняется
     }
 }
 // Реализация пузырьковой сортировки для строки с максимальной суммой
    {5,6,9,7}
 for (int i=0; i<m; i++){ // Необходимо число проходов для работы пузырьковой сортировки
     for (int j=0; j<m-1; j++){ // Счётчик для прохода по массиву
         // Если элемент больше следующего, то он "всплывает", как пузырёк
         if (arr[max_index][j]>arr[max_index][j+1]) swap(arr[max_index][j],arr[max_index][j+1]); // Замена элементов
     }
     {4,3,2,1}
     {3,4,2,1}
     {3,2,4,1}
     {3,2,1,4}
     {2,3,1,4}
     {2,1,3,4}
     {1,2,3,4}
     
 }

 print_matrix(arr); // Вывод изменённого массива
}*/
//7
/*void print_matrix(vector<vector<int>> arr){ // вывод массива
 for(auto row: arr){  // Итерирование по двумерному массиву
     for (auto item: row){ // Итерирование по массиву
         cout<<item<<" "; // Вывод элемента
     } cout<<"\n"; // Вывод раздедления после печати каждой строки массива
 }
}

int main(){ //точка входа в программу
 int n, m; // создание двух целых числел
 cin>>n>>m; // ввод размеров массива
 
 vector<vector<int>> arr(n, vector<int>(m)); // Инициализция массива нужных размеров
 for (int i=0; i<n; i++)
     for (int j=0; j<m; j++)
         cin>>arr[i][j]; // заполнение массива из консоли

 int max_index=0, max=INT_MIN, min_index=0, min=INT_MAX;// создание переменной для хранения индекса столбца с максимальной элементом, а также минимальным
 // создание так же переменных максимального и минимального элемента
    {{1,2,5,6},
     {2,5,9,8},
     {5,6,7,9}}
 for (int i=0; i<n; i++){ // Счётчик для прохода по массиву
     for (int j=0; j<m; j++){ // Счётчик для прохода по массиву
         if (arr[i][j]<min){ // Проверка на то, является ли текущий элемент меньше минимального из педыдущий элементов
             min=arr[i][j]; // Если это не так, то появлется новый минимальный элемент
             min_index=j; // И индекс столбца с минимальным элементом меняется
         }
         if (arr[i][j]>max){ // Проверка на то, является ли текущий элемент больше максимального из педыдущий элементов
             max=arr[i][j]; // Если это не так, то появлется новый максимальный элемент
             max_index=j; // И индекс столбца с максимальным элементом меняется
         }
     }
 }
 for (int i=0; i<n; i++){ // Проход по столбцу
     swap(arr[i][min_index], arr[i][max_index]); // Замена переменных в необходимых столбцах
 }
 print_matrix(arr); // Вывод изменённого массива
}*/
//8
/*#include <iostream> //подключение библиотеки функции ввода-вывода
 #include <vector> // подключение библиотеки для динамических массивов
 #include <windows.h> // библиотека для подключение русского языка
  
 using namespace std; //подключение пространства имён std
  
 int main(){
    SetConsoleCP(1251); //подключение русского языка
    SetConsoleOutputCP(1251); //подключение русского языка
  
    int n; // создание целого числа
    cin>>n; // ввод размера массива строк
    vector<string> words(n); // Инициализция массива строк нужных размеров
    for (int i=0;i<n;i++){
        cin>>words[i]; // заполнение массива из консоли
    }
    "abcde"
    for(auto word: words){ // Итерировние по массиву строк, то есть по словам
        bool flag=false; // переменная для определения есть ли в слове попвторяющиеся буквы
        for (int i=0; i<word.size(); i++){ // счётчик для одной буквы слова
            for (int j=i+1; j<word.size(); j++){ // счётчик для другой буквы слова
                if (word[i]==word[j]){ // Если буквы с разными счётчиками совпали => есть повторяющиеся буква
                    flag=true;  // меняем флаг
                }
            }
        }
        
        if (flag==false) cout<<word<<" "; // Если нет повторябщихся букв, то выводим слово
    }
 }*/
//9
/*bool notalpha(int symbl){ // Проверка не является ли символ буквой
 return (symbl >= 0 and symbl<65) or (symbl >= 91 and symbl<97) or (symbl>=123); // проверка по кодировке win-1251
}
'a' - 5  'a'>3
'b' - 6   'b'>2
'b'>'a'
int main(){
 SetConsoleCP(1251); //подключение русского языка
 SetConsoleOutputCP(1251); //подключение русского языка
 string text; // Инициализация текстовой переменной
 getline(cin, text); // Ввод строки
 text+=" "; // Добавление пробела в конец для того, чтобы последнее слово было отделено не буквенными символами с обеих сторон
"abcde ff"
start=0
    i=5;
 012
    привет, как дела
 int start_word = 0, min=INT_MAX, max=INT_MIN; // Переменные для хренения индекс начала слова, длину минимального и максимального слова
 for (int i=0; i<text.size(); i++){ // Побуквенный обход слова
     if (notalpha(text[i])){ // Если не буква, то слово закончилось
         if (i!=start_word){ // Начало слова не равно его концу (если не буквенных символов несколько)
             int len=i-start_word; // Длина слова
             if (len>max) max=len; // Проверка на то, является ли текущий элемент наибольшей строкой и присвоение нового, если это не так
             if (len<min) min=len; // Проверка на то, является ли текущий элемент наименьшей строкой и присвоение нового, если это не так
         }

         start_word=i+1; // если это не буквенный символ, то следующее слово может начинаться со следующего индекса
     }
 }

 cout<<min<<" "<<max; // вывод минимальной и максимально длины слова
}*/
//10
bool notalpha(int symbl){ // Проверка не является ли символ буквой
 return (symbl >= 0 and symbl<65) or (symbl >= 91 and symbl<97) or (symbl>=123); // проверка по кодировке win-1251
}

int main(){
 SetConsoleCP(1251); //подключение русского языка
 SetConsoleOutputCP(1251); //подключение русского языка

 string text; // Инициализация текстовой переменной

 getline(cin, text); // Ввод строки
 text+=" "; // Добавление пробела в конец для того, чтобы последнее слово было отделено не буквенными символами с обеих сторон

 int start_word = 0; // Переменная для хренения индекса начала слова
 for (int i=0; i<text.size(); i++){ // Побуквенный обход слова
     if (notalpha(text[i])){  // Если не буква, то слово закончилось или не началось
         if (i!=start_word){ // Начало слова не равно его концу (если не буквенных символов несколько)
             int len=i-start_word; // Длина слова
             if (len%2==1){ // Проверка длины слова на кратность
                 text.erase(start_word, len); // Стираем часть с начала слова до конца слова
                 if (start_word==0) i=start_word;
                 else i=start_word-1; // передвигаем счётчик на место где до этого начиналось слово
                 continue;
             }
         }
         start_word=i+1; // если это не буквенный символ, то следующее слово может начинаться со следующего индекса
     }
 }
 text=text.substr(0, text.size()-1);// удаляем последний пробел, который мы добавили
 cout<<text; // Вывод изменённого текста
}
